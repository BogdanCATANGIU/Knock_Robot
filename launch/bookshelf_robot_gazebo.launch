<launch>
  <!-- Load the bookshelf_robot URDF model into the parameter server -->

  <arg name="model" default="$(find knock_robot)/urdf/bookshelf_robot.urdf.xacro"/>
  <param name="robot_description" command="$(find xacro)/xacro $(arg model)" />
  <!-- Start Gazebo with an empty world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch"/>
  <!-- Spawn a bookshelf_robot in Gazebo, taking the description from the
       parameter server -->
  <node name="spawn_sdf" pkg="gazebo_ros" type="spawn_model" args="-file $(find cw3_gazebo)/models/bookshelf_with_cans/model.sdf -x 3 -y 3 -sdf -model shelf" />
  <node name="moving" pkg="cw3_gazebo" type= "gen_random.py" />
  
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
        args="-param robot_description -urdf -model bookshelf_robot" />
  <rosparam file="$(find knock_robot)/controllers.yaml" command="load"/>
  <node name="controller_spawner" pkg="controller_manager" type="spawner"
        args="arm_controller"/>
  <!-- Convert /joint_states messages published by Gazebo to /tf messages,
       e.g., for rviz-->
  <node name="robot_state_publisher" pkg="robot_state_publisher"
        type="robot_state_publisher"/>

</launch>
